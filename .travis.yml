os: linux
dist: xenial

cache:
  directories:
    - node_modules
    - app/node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder
    - $HOME/.npm/_prebuilds

env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
  DOCKER_COMPOSE_VERSION: 1.25.5
  NODE_PATH: /home/travis/build/AndreasRoither/Snippets/ElectronApp/Snippets/node_modules

git:
  depth: false

branches:
  only:
  - master
  - /v\d+\.\d+\.\d+/

stages:
  - sonarcloud
  - make electron
  - publish electron
  - build docker
  - build docker and deploy to heroku
  - test rest api

jobs:
  include:
    - stage: sonarcloud
      name: "Sonarcloud code analysis"
      if: tag IS NOT present
      addons:
        sonarcloud:
          organization: "andreasroither"
          token: $SONAR_TOKEN
      language: node_js
      node_js: 13
      script:
        - cd ./ElectronApp/Snippets/
        - npm install
        - cd ..
        - cd ..
        - sonar-scanner
    - stage: build docker and deploy to heroku
      name: "Build docker images with versioning tag and deploy to heroku"
      if: tag IS present
      before_install:
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - cd ./Docker/
        - docker-compose up --build -d
        - docker images
        - docker tag dpage/pgadmin4:latest andreasroither/snippets_pgadmin:latest
        - docker tag dpage/pgadmin4:latest andreasroither/snippets_pgadmin:$TRAVIS_TAG
        - docker tag snippet_restapi:latest andreasroither/snippets_restapi:latest
        - docker tag snippet_restapi:latest andreasroither/snippets_restapi:$TRAVIS_TAG
        - docker tag snippets_db:latest andreasroither/snippets_db:latest
        - docker tag snippets_db:latest andreasroither/snippets_db:$TRAVIS_TAG
        - docker push $DOCKER_USERNAME/snippets_pgadmin:latest
        - docker push $DOCKER_USERNAME/snippets_pgadmin:$TRAVIS_TAG
        - docker push $DOCKER_USERNAME/snippets_restapi:latest
        - docker push $DOCKER_USERNAME/snippets_restapi:$TRAVIS_TAG
        - docker push $DOCKER_USERNAME/snippets_db:latest
        - docker push $DOCKER_USERNAME/snippets_db:$TRAVIS_TAG
        - cd ..
      deploy:
        app: $HEROKU_APP_NAME
        provider: heroku
        skip_cleanup: true
        api_key: $HEROKU_AUTH_TOKEN
    - stage: build docker
      name: "Build docker images with git sha tag and (just for testing to deploy to heroku)."
      if: tag IS NOT present
      before_install:
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - cd ./Docker/
        - docker-compose up --build -d
        - docker images
        - GIT_SHA="$(git rev-parse --short HEAD)"
        - docker tag dpage/pgadmin4:latest andreasroither/snippets_pgadmin:latest
        - docker tag dpage/pgadmin4:latest andreasroither/snippets_pgadmin:$GIT_SHA
        - docker tag snippet_restapi:latest andreasroither/snippets_restapi:latest
        - docker tag snippet_restapi:latest andreasroither/snippets_restapi:$GIT_SHA
        - docker tag snippets_db:latest andreasroither/snippets_db:latest
        - docker tag snippets_db:latest andreasroither/snippets_db:$GIT_SHA
        - docker push $DOCKER_USERNAME/snippets_pgadmin:latest
        - docker push $DOCKER_USERNAME/snippets_pgadmin:$GIT_SHA
        - docker push $DOCKER_USERNAME/snippets_restapi:latest
        - docker push $DOCKER_USERNAME/snippets_restapi:$GIT_SHA
        - docker push $DOCKER_USERNAME/snippets_db:latest
        - docker push $DOCKER_USERNAME/snippets_db:$GIT_SHA
      deploy:
        app: $HEROKU_APP_NAME
        provider: heroku
        skip_cleanup: true
        api_key: $HEROKU_AUTH_TOKEN
    - stage: make electron
      name: "Build electron app"
      if: tag IS NOT present
      os: windows
      language: node_js
      node_js: 13
      script:
        - cd ./ElectronApp/Snippets/
        - npm install
        - npm run make
    - stage: publish electron
      name: "Build and publish electron app on github"
      if: tag IS present
      os: windows
      language: node_js
      node_js: 13
      script:
        - cd ./ElectronApp/Snippets/
        - npm install
        - npm run make
      deploy:
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        file_glob: true
        file: ./out/make/**/*.exe
        skip_cleanup: true
        on:
          tags: true
    - stage: test rest api
      name: "Unit test Go RestAPI"
      if: tag IS NOT present
      language: go
      go: 1.14.x
      services:
        - docker
      script:
        - docker run -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_DB=$POSTGRES_DB -d --name snippets_postgres_db -p 5432:5432 $DOCKER_USERNAME/snippets_db:latest 
        - export POSTGRES_HOST_NAME=
        - cd ./GoRestAPI/
        - go test -v

notifications:
  on_success: change
  on_failure: always