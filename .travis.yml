os: linux
dist: xenial

cache:
  directories:
    - node_modules
    - app/node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder
    - $HOME/.npm/_prebuilds

env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

env:
  DOCKER_COMPOSE_VERSION: 1.25.5
  NODE_PATH: /home/travis/build/AndreasRoither/Snippets/ElectronApp/Snippets/node_modules

git:
  depth: false

branches:
  only:
  - master

addons:
  sonarcloud:
    organization: "andreasroither" # the key of the org you chose at step #3
    token: $SONAR_TOKEN # encrypted value of your token

stages:
  - sonarcloud
  - build docker
  - build electron
  - test docker
  - test rest api

jobs:
  include:
    - stage: sonarcloud
      name: "Sonarcloud code analysis"
      language: node_js
      node_js: 13
      script:
        - cd ./ElectronApp/Snippets/ 
        - npm install 
        - cd ..
        - cd ..
        - sonar-scanner
    - stage: build docker
      name: "Build docker image and push to dockerhub"
      before_install:
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
        - cd ./Postgres/
        - docker volume create --name data -d local
        - cd ..   
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - cd ./Postgres/
        - docker-compose build -t $DOCKER_USERNAME/Snippets ./
        - docker images
        - GIT_SHA="$(git rev-parse --short HEAD)"
        - docker tag $DOCKER_USERNAME/Snippets:latest $DOCKER_USERNAME/Snippets:$GIT_SHA
        - docker push $DOCKER_USERNAME/Snippets:latest
        - docker push $DOCKER_USERNAME/Snippets:$GIT_SHA
    - stage: build electron
      name: "Make electron app"
      os: windows
      language: node_js
      node_js: 13
      script: 
        - cd ./ElectronApp/Snippets/ 
        - npm install 
      script:
        - npm run make
    - stage: test docker
    - stage: test rest api
      name: "Unit test Go RestAPI"
      language: go 
      go : 1.14.x
      services:
        - docker              
      script: 
        - docker run $DOCKER_USERNAME/Snippets:latest
        - cd ./GoRestAPI/
        - go test -v     
    
after_script:
  - docker-compose down